#!/usr/bin/bash
#
#####################    Variables   ################
#
# Token from github (!)
TOKEN='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'

ERR="Too few arguments! Try 'wd --help' for more information.";
# Private or public repo
PRIVATE="false";

######################   NO Arguments   ##################
if [ $# -lt 1 ]
then
	echo $ERR;
	exit;
fi

##########################   HELP   ########################
if [ $1 ==  "--help" ]
then
	echo "Usage: 
	wd [OPTIONS]...[NAME OF DIR]...[TITLE OF WEBSITE]..[NAME OF GITHUB REPO]
  The utility creates a working folder with all the necessary folders, files and working tools for web development.
   Options:
           -p              Creating a PRIVATE repository on github
			   (default option: public);
           -g              Initialization of gulp, creation of 
                          gulpfile.js containing a simple default 
                          task for minimizing main.css and main.js. 
                          The public version is saved in the \"public\" 
                          folder.
  NAME OF DIR - name of creating directory.
  TITLE OF WEBSITE - <title> of website.
  NAME OF GITHUB REPO - name of the github repository that will be created.
  
  To continue using gulp in your project, use the \"gulp\" or \"gulp default\" command.
  
 To correctly create a remote repository on github, you will need your personal login token with the authority to create a repository (\$Token in the program)"
	exit;
fi

#######################    OPTIONS    ###################
while getopts "gp" options; do
	case "${options}" in 
	g) GULP="true";
	;;
	p) PRIVATE="true"; 
	;; 
esac
done

################   REMOVE OPTIONS WITH SHIFT  ##############
while [[ $1 == -* ]]; do
	shift;
done

##################  CHECK NUMBER OF ARGS    ###############
if [ $# -lt 2 ] 
then 
	echo $ERR;
	exit;
elif [ $# -gt 3 ]
then
	echo "Too many arguments
Try 'wd --help' for more information.";
	exit;
fi

#############   CREATE DIR AND FILES   ####################

mkdir $1 $1/img $1/css $1/js $1/scss $1/scss/components $1/scss/common $1/scss/components/main;
touch $1/scss/common/_fonts.scss $1/scss/common/_extends.scss $1/scss/common/_mixins.scss $1/scss/common/_animations.scss $1/scss/common/_common.scss $1/scss/components/main/_main.scss; 
cd $1;

#################   README.md    #######################

touch README.md;

################# INDEX.HTML   #########################

echo "<!DOCTYPE html>
<html lang=\"en\">
<head>
    <meta charset=\"UTF-8\">
    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
    <meta name=\"discription\" content=\"content\">
    <title>$2</title>
    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"./img/favicon.ico\" />
    <link rel=\"stylesheet\" href=\"./css/main.css\" />
    <script src=\"./js/main.js\" defer></script>
</head>
<body>
    
</body>
</html>" > index.html;

#####################    MAIN.SCSS   #####################

echo "@import \"./fonts\";
@import \"./reset\";
@import \"./variables\";
@import \"./extends\";
@import \"./mixins\";
@import \"./media_breakpoints\";
@import \"./animations\";
@import \"./common\";" > scss/common/_index.scss;

echo "@import \"./common/index\";
@import \"./components/header/index\"" > scss/main.scss;

####################    RESET.SCSS  #####################

echo "html, body, body div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, figure, footer, header, menu, nav, section, time, mark, audio, video, details, summary {
        margin: 0;
        padding: 0;
        border: 0;
        font-size: 100%;
        font-weight: normal;
        vertical-align: baseline;
        background: transparent;
}

article, aside, figure, footer, header, nav, section, details, summary {display: block;}

html {box-sizing: border-box;}

*,
*:before,
*:after {box-sizing: inherit;}

img, object, embed {max-width: 100%;}

#map img {max-width: none;}

ul {list-style: none;}

blockquote, q {quotes: none;}

blockquote:before,
blockquote:after,
q:before,
q:after {content: ''; content: none;}

a {margin: 0; padding: 0; font-size: 100%; vertical-align: baseline; background: transparent;}

del {text-decoration: line-through;}

abbr[title], dfn[title] {border-bottom: 1px dotted #000; cursor: help;}

table {border-collapse: collapse; border-spacing: 0;}
th {font-weight: bold; vertical-align: bottom;}
td {font-weight: normal; vertical-align: top;}

hr {display: block; height: 1px; border: 0; border-top: 1px solid #ccc; margin:1em 0; padding: 0;}

input, select {vertical-align: middle;}

pre {
    white-space: pre; 
    white-space: pre-wrap; 
    white-space: pre-line; 
    word-wrap: break-word; 
}

input[type=\"radio\"] {vertical-align: text-bottom;}
input[type=\"checkbox\"] {vertical-align: bottom;}
.ie7 input[type=\"checkbox\"] {vertical-align: baseline;}
.ie6 input {vertical-align: text-bottom;}

select, input, textarea {font: 99% sans-serif;}

table {font-size: inherit; font: 100%;}

small {font-size: 85%;}

strong {font-weight: bold;}

td, td img {vertical-align: top;}

sup {top: -0.5em;}
sub {bottom: -0.25em;}

pre, code, kbd, samp {font-family: monospace, sans-serif;}

.clickable,
label,
input[type=button],
input[type=submit],
input[type=file],
button {cursor: pointer;}

button, input, select, textarea {margin: 0;}

button,
input[type=button] {width: auto; overflow: visible;}

.ie7 img {-ms-interpolation-mode: bicubic;}

.clearfix:before, .clearfix:after { content: \"\\0020\"; display: block; height: 0; overflow: hidden; }
.clearfix:after { clear: both; }
.clearfix { zoom: 1; } " > scss/common/_reset.scss;

####################### /COMMON/VARIABLES.SCSS ##################

echo "
\$breakpoints: (
  xxl: 1920px,
  xl: 1280px,
  md: 1024px,
  sm: 767px,
  xs: 576px,
);
" > scss/common/_variables.scss;

##################### /COMMON/MEDIA_BREAKPOINTS.SCSS ############

echo "
@mixin desktop() {
	@media (max-width: map-get(\$breakpoints, \"xxl\")) {
		@content;
	}
}
@mixin laptop() {
	@media (max-width: map-get(\$breakpoints, \"xl\")) {
		@content;
	}
}
@mixin tablet() {
	@media (max-width: map-get(\$breakpoints, \"md\")) {
		@content;
	}
}
@mixin mobile() {
	@media (max-width: map-get(\$breakpoints, \"sm\")) {
		@content;
	}
}
@mixin mobileSmall() {
	@media (max-width: map-get(\$breakpoints, \"xs\")) {
		@content;
	}
}" > scss/common/_media_breakpoints.scss;

####################  SCSS/COMPONENTS/MAIN/MAIN-MEDIA.SCSS  ########

echo "
@include desktop {
	main {
		/* content */
	}
}
@include laptop{
	main{
		/* content */
	}
}
@include tablet{
	main{
		/* content */
	}
}
@include mobile{
	main{
		/* content */
	}
}
@include mobileSmall{
	main{
		/* content */
	}
}
" > scss/components/main/_main_media.scss;

######################	SCSS/COMPONENTS/MAIN/INDEX.SCSS ########

echo "@import \"./main\";
@import \"./main_media\";" > scss/components/main/_index.scss;

####################    MAIN.JS   ######################

touch js/main.js;

#####################   GULP   ########################

if [ $GULP == 'true' ]; then
	mkdir public public/css public/js;
	npm install gulp-cli;

######################  PACKAGE.JSON  ################

	echo '{                                                                                  
  "name": "lesson_1_double",                                                       
  "version": "1.0.0",                                                              
  "description": "",
  "main": "index.js",
  "scripts": {},
  "author": "",
  "license": "ISC",
  "dependencies": {
    "gulp": "^4.0.2",
    "gulp-clean-css": "^4.3.0",
    "gulp-minify": "^3.1.0",
    "gulp-rename": "^2.0.0",
    "gulp-sass": "^5.1.0",
    "sass": "^1.70.0"
  }
}' > package.json;

####################   INSTALL GULP  #################

	npm install gulp;

######################  GULPFILE.JS ###################

	echo 'const gulp = require("gulp"),
  minifyCSS = require("gulp-clean-css"),
  renameCSS = require("gulp-rename"),
  sass = require("gulp-sass")(require("sass")),
  minifyJS = require("gulp-minify");

// minCSS
gulp.task("mincss", async function () {
  gulp
    .src("./css/*.css")
    .pipe(sass())
    .pipe(minifyCSS())
    .pipe(renameCSS({ suffix: ".min" }))
    .pipe(gulp.dest("./public/css"));
});

//minJS
gulp.task("minjs", async function () {
  gulp.src("./js/*.js").pipe(minifyJS()).pipe(gulp.dest("./public/js"));
});

// Watch
gulp.task("default", gulp.series(
        "mincss",
        "minjs"
));' > gulpfile.js;

#####################   COMMAND TO CLEAR CSS AND JS   ##############

	gulp;
fi
###############    GIT INIT, GITIGNORE   #####################

git init && echo "node_modules/*" > .gitignore && git add * && git commit -m "Init project"

###############     REMOTE REPO IN GITHUB   #################

NAME="{\"name\":\"$3\", \"private\": $PRIVATE}";
if [ $# -gt 2 ]; then
curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer $TOKEN" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/user/repos -d "$NAME" 
	git remote add origin https://github.com/konsin1988/$3.git;
	git push origin master;
fi

#######################   LET'S GO   #########################

code .;
exec bash;

#############################################################
